// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import AuthProvider from "@/context/AuthProvider";
// import { Toaster } from "@/components/ui/sonner";
// import { getServerSession } from "next-auth";
// import { authOptions } from "./api/auth/[...nextauth]/options";
// import Navbar from "@/components/Navbar";
// import { ThemeProvider } from "@/components/theme-provider";
// import NavbarPublic from "@/components/NavbarPublic";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Atlas",
//   description: "Generated by create next app",
//   icons: {
//     icon: "/favicon.svg",
//   },
// };

// export default async function RootLayout({
//   children,
// }: Readonly<{ children: React.ReactNode }>) {
//   const session = await getServerSession(authOptions);
//   console.log("Authenticated Layout Rendered", session);

//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen`}>
//         <ThemeProvider
//           attribute="class"
//           defaultTheme="dark"
//           enableSystem
//           disableTransitionOnChange
//         >

//           <AuthProvider>
//             {session ? (
//               <div className="bg-slate-900">
//                 <Navbar />
//                 {children}
//               </div>
//             ) : (
//               <div className="bg-slate-900">
//                 <NavbarPublic />
//                 {/* <p>Landing layout</p> */}
//                 <main>{children}</main>
//               </div>
//             )}
//             <Toaster />
//           </AuthProvider>
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// }






// Root Layout (layout.tsx)
// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import AuthProvider from "@/context/AuthProvider";
// import { Toaster } from "@/components/ui/sonner";
// import { getServerSession } from "next-auth";
// import { authOptions } from "./api/auth/[...nextauth]/options";
// import Navbar from "@/components/Navbar";
// import { ThemeProvider } from "@/components/theme-provider";
// import NavbarPublic from "@/components/NavbarPublic";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Atlas",
//   description: "Generated by create next app",
//   icons: {
//     icon: "/favicon.svg",
//   },
// };

// export default async function RootLayout({
//   children,
// }: Readonly<{ children: React.ReactNode }>) {
//   const session = await getServerSession(authOptions);
//   console.log("Authenticated Layout Rendered", session);

//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased h-screen overflow-hidden`}>
//         <ThemeProvider
//           attribute="class"
//           defaultTheme="dark"
//           enableSystem
//           disableTransitionOnChange
//         >
//           <AuthProvider>
//             {session ? (
//               <div className="h-screen flex flex-col bg-slate-900">
//                 <Navbar />
//                 <div className="flex-1 overflow-hidden">
//                   {children}
//                 </div>
//               </div>
//             ) : (
//               <div className="h-screen flex flex-col bg-slate-900">
//                 <NavbarPublic />
//                 <main className="flex-1 overflow-hidden">{children}</main>
//               </div>
//             )}
//             <Toaster />
//           </AuthProvider>
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// }



import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import AuthProvider from "@/context/AuthProvider";
import { Toaster } from "@/components/ui/sonner";
import { getServerSession } from "next-auth";
import { authOptions } from "./api/auth/[...nextauth]/options";
import Navbar from "@/components/Navbar";
import { ThemeProvider } from "@/components/theme-provider";
import NavbarPublic from "@/components/NavbarPublic";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Atlas",
  description: "Generated by create next app",
  icons: {
    icon: "/favicon.svg",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const session = await getServerSession(authOptions);
  console.log("Authenticated Layout Rendered", session);

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased h-screen overflow-hidden`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          <AuthProvider>
            {session ? (
              <div className="h-screen flex flex-col bg-slate-900">
                <Navbar />
                <div className="flex-1 overflow-hidden">
                  {children}
                </div>
              </div>
            ) : (
              <div className="h-screen flex flex-col bg-slate-900">
                <NavbarPublic />
                <div className="flex-1 overflow-hidden">
                  {children}
                </div>
              </div>
            )}
            <Toaster />
          </AuthProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}